/* warning util */

@function get($map, $key) {
    @if not map-has-key($map, $key) {
        @error "#{$key} doesn't exist in #{$map}!";
    }

    @return map-get($map, $key);
}

/* map delete util */

@function nth-delete($list, $n){
    $result: ();
    $n: if($n < 0, length($list) + $n + 1, $n);
    $bracketed: is-bracketed($list);
    $separator: list-separator($list);
    @for $i from 1 through length($list){
        @if $i != $n { $result: append($result, nth($list, $i)); }
    }
    @return join((), $result, $separator, $bracketed);
}

/* map shorthands */

@function line-height($size: content) {
    @return get($line-heights, $size);
}

@function z($layer: content) {
    @return get($z-index, $layer);
}

@function color($name: primary, $opacity: 100) {
    @return get(get($colors, $name), $opacity);
}

@function font-size($size: text) {
    @return get($font-sizes, $size);
}

@function font-family($name: primary) {
    @return get($font, $name);
}

@function font-weight($weight) {
    @return get($font-weights, $weight);
}

// access single prop of an animation
@function animation-property($property, $type: primary) {
    @return get(get($animations, $type), $property);
}

// access all props of an animation
@function animation($type: primary) {
    @return animation-property(duration, $type) animation-property(ease, $type);
}